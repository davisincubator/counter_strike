labs(x = 'Stimulus Color (degs)', y = 'Presentation Frequency',
color = 'Templates')+
theme_gray(24)+
theme(legend.position = 'top')
100/5
ggplot(tigh.tartemp, aes(xnum, yvals))+
scale_x_continuous(breaks = seq(-180, 180, 15), limits=c(-45, 45))+
scale_y_continuous(labels = c(.95, .75, .55, .35, .05))+
geom_line(size = 2)+
labs(x = 'Stimulus Color (degs)', y = 'Presentation Frequency',
color = 'Templates')+
theme_gray(24)+
theme(legend.position = 'top')
ggplot(tigh.tartemp, aes(xnum, yvals))+
scale_x_continuous(breaks = seq(-180, 180, 15), limits=c(-45, 45))+
scale_y_continuous(labels = c(.05,.35,.55,.75,.95))+
geom_line(size = 2)+
labs(x = 'Paired Color (degs)', y = 'Proportion of "Same" response')+
theme_gray(24)
ggplot(tigh.tartemp, aes(xnum, yvals))+
scale_x_continuous(breaks = seq(-180, 180, 15), limits=c(-45, 45))+
scale_y_continuous(labels = c(.05,.35,.55,.75,.95))+
geom_line(size = 2)+
labs(x = 'Paired Color (degs)', y = 'Responded "Same" (%)')+
theme_gray(24)
library(ggplot2)
library(scales)
library(grid)
setwd('/../Graduate School/Dissertation Proposal/')
# Functions
PreDat <- function(m, s, range) {
xnum = range
yvals <- dnorm(xnum, m, s)
plotdat = data.frame(xnum, yvals)
#plotdat <- plotdat[plotdat$xnum != 0, ]
return(plotdat)
}
# Common theme
theme_grant <- theme(
text = element_text(size=6),
legend.position = c(1, 1),
legend.justification = c(.75, .75),
legend.margin = unit(0, "points"),
legend.key.height = unit(5, "points"),
legend.key.width = unit(5, "points"),
legend.background = element_blank(),
legend.key = element_blank(),
plot.margin = unit(c(2, 2, 0, 0), "points"),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
# Generate target templates
wide.tartemp = PreDat(0, 20, seq(-45, 45, 1))
tigh.tartemp = PreDat(0, 10, seq(-45, 45, 1))
#true.tartemp = PreDat(0, 5, seq(-45, 45, 1))
# Generate Distractor distibutiion
dseq = seq(-45, 45, 15)
dseq <- dseq[-4]
disdis = data.frame(xnum = dseq,
yvals = rep(.005, length(dseq)))
tseq <- seq(-40, 40, 10)
tardis <- data.frame(xnum = tseq,
yvals = rep(0), length(dseq))
# Make Plot
ggplot(wide.tartemp, aes(xnum, yvals, color = 'Group B'))+
scale_x_continuous(breaks = seq(-180, 180, 15), limits=c(-45, 45))+
geom_line(size = 2)+
geom_line(data = tigh.tartemp, aes(color = 'Group A'), size = 2)+
geom_point(data = disdis, color = 'black', size = 4)+
geom_point(data = tardis, color = 'green', shape = 2, size = 4)+
labs(x = 'Stimulus Color (degs)', y = 'Presentation Frequency',
color = 'Templates')+
theme_gray(24)+
theme(legend.position = 'top')
# Categorization plot
ggplot(tigh.tartemp, aes(xnum, yvals))+
scale_x_continuous(breaks = seq(-180, 180, 15), limits=c(-45, 45))+
scale_y_continuous(labels = c(.05,.35,.55,.75,.95))+
geom_line(size = 2)+
labs(x = 'Paired Color (degs)', y = 'Responded "Same" (%)')+
theme_gray(24)
ggplot(tigh.tartemp, aes(xnum, yvals))+
scale_x_continuous(breaks = seq(-180, 180, 15), limits=c(-45, 45))+
scale_y_continuous(labels = c(.05,.35,.55,.75,.95))+
geom_line(size = 2)+
labs(x = 'Paired Color (degs)', y = 'Accuracy')+
theme_gray(24)
scale(.8)
install.packages("psyphy")
library(psyphy)
dprime.mAFC()
dprime.mAFC
?uniroot
qnorm(.7)
?qnorm
qnorm(.5)
library(Hmisc)
?hoeffding
?hoeffd
`6_rv.contvissearch` <- read.csv("~/Dropbox/analysis/concap_continuous/vissearch/6_rv-contvissearch.txt", stringsAsFactors=FALSE)
View(`6_rv.contvissearch`)
ls()
dat <- `6_rv.contvissearch`
dat
summary(dat)
unique(dat$tloc1)
unique(dat$dshade)
unique(dat$tori1)
unique(dat$isi)
unique(dat$code2)
unique(rm_type)
unique(dat$rm_type)
(345.142857*6) - (1705.657143*6) + 42903.6
(345.142857*36) - (1705.657143*6) + 42903.6
(345.142857*8) - (1705.657143*8) + 42903.6
(345.142857*64) - (1705.657143*8) + 42903.6
?plogit
??plogit
source('~/Documents/Code/counter_strike/round_outcomes_analysis.R', echo=TRUE)
require(devtools)
install_github('rCharts', 'ramnathv')
# Analyze map outcomes
library(dplyr)
library(ggplot2)
library(tidyr)
# Load data ---------------------------------------------------------------
raw <- read.csv("data/CSGOMaps02_RoundOutcomes.csv", stringsAsFactors = FALSE)
# Make data tidy
tdat <- raw %>%
gather(map, Twin, de_dust2:de_overpass) %>%
mutate(
Twin = as.numeric(sub("%", "", Twin)) / 100,
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round.Group),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
select(-Winner, -Skill.Group.Bin, -Round.Group)
# Plot --------------------------------------------------------------------
ggplot(tdat, aes(round.group, Twin, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_wrap(~map)+
scale_y_continuous(labels = function(x) paste0(round(x*100, 2), '%')) +
labs(x = 'Round Group', y = 'Terrorist Win', color = 'Skill Group')
# interactive plot:
library(rCharts)
#require(devtools)
#install_github('rCharts', 'ramnathv')
blah = nPlot(Twin ~ round.group, group = "map", data = tdat, type = "multiBarChart")
setwd("~/Documents/Code/counter_strike")
# Analyze map outcomes
library(dplyr)
library(ggplot2)
library(tidyr)
# Load data ---------------------------------------------------------------
raw <- read.csv("data/CSGOMaps02_RoundOutcomes.csv", stringsAsFactors = FALSE)
# Make data tidy
tdat <- raw %>%
gather(map, Twin, de_dust2:de_overpass) %>%
mutate(
Twin = as.numeric(sub("%", "", Twin)) / 100,
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round.Group),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
select(-Winner, -Skill.Group.Bin, -Round.Group)
# Plot --------------------------------------------------------------------
ggplot(tdat, aes(round.group, Twin, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_wrap(~map)+
scale_y_continuous(labels = function(x) paste0(round(x*100, 2), '%')) +
labs(x = 'Round Group', y = 'Terrorist Win', color = 'Skill Group')
# interactive plot:
library(rCharts)
#require(devtools)
#install_github('rCharts', 'ramnathv')
blah = nPlot(Twin ~ round.group, group = "map", data = tdat, type = "multiBarChart")
print(blah)
blah = nPlot(Twin ~ round.group+skill.group, group = "map", data = tdat, type = "multiBarChart")
# Analyze map outcomes
library(dplyr)
library(ggplot2)
library(tidyr)
# Load data ---------------------------------------------------------------
raw <- read.csv("data/CSGOMaps02_RoundOutcomes.csv", stringsAsFactors = FALSE)
# Make data tidy
tdat <- raw %>%
gather(map, Twin, de_dust2:de_overpass) %>%
mutate(
Twin = as.numeric(sub("%", "", Twin)) / 100,
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round.Group),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
select(-Winner, -Skill.Group.Bin, -Round.Group)
# Plot --------------------------------------------------------------------
ggplot(tdat, aes(round.group, Twin, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_wrap(~map)+
scale_y_continuous(labels = function(x) paste0(round(x*100, 2), '%')) +
labs(x = 'Round Group', y = 'Terrorist Win', color = 'Skill Group')
moi <- c("de_dust", "de_nuke", "de_inferno")
ggplot(filter(tdat, map %in% moi), aes(round.group, Twin, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_wrap(~map)+
scale_y_continuous(labels = function(x) paste0(round(x*100, 2), '%')) +
labs(x = 'Round Group', y = 'Terrorist Win', color = 'Skill Group')
moi <- c("de_dust2", "de_nuke", "de_inferno")
ggplot(filter(tdat, map %in% moi), aes(round.group, Twin, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_wrap(~map)+
scale_y_continuous(labels = function(x) paste0(round(x*100, 2), '%')) +
labs(x = 'Round Group', y = 'Terrorist Win', color = 'Skill Group')
dir()
dir('/data')
dir('/data/')
dir('data/')
raw2 <- read.csv("data/Maps02_BombPlantOutcomes.csv", stringsAsFactors = FALSE)
head(raw2)
View(raw2)
?read.cs
?read.csv
raw2 <- read.csv("data/Maps02_BombPlantOutcomes.csv", stringsAsFactors = FALSE,
skilNul = TRUE)
raw2 <- read.csv("data/Maps02_BombPlantOutcomes.csv", stringsAsFactors = FALSE,
skipNul = TRUE)
head(raw2)
raw2 %>%
select(-contains("X"))
library(dplyr)
library(ggplot2)
library(tidyr)
raw2 %>%
select(-contains("X"))
raw2 %>%
select(-starts_with("X"))
bdat <- raw2 %>%
select(-starts_with("X"))
View(bdat)
raw2 <- read.csv("data/Maps02_BombPlantOutcomes.csv", stringsAsFactors = FALSE,
skipNul = TRUE, na.strings = c("NA", ""))
bdat <- raw2 %>%
select(-starts_with("X"))
bdat
View(bdat)
help(package = 'tidyr')
unite_(mtcars, "vs_am", c("vs","am"))
df <- data.frame(x = c("a.b", "a.d", "b.c"))
df
df %>% extract(x, "A")
bdat %>% gather(map, planted, de_dust2:de_overpass.1)
View(bdat %>% gather(map, planted, de_dust2:de_overpass.1))
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, de_dust2:de_overpass.1) %>%
View()
?extract
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, de_dust2:de_overpass.1) %>%
extract(planted, c('planted', 'notplanted'))
View()
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, de_dust2:de_overpass.1) %>%
extract(planted, c('planted', 'notplanted'), '[a-z]')
messy <- data.frame(
id = 1:4,
trt = sample(rep(c('control', 'treatment'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
messy
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, de_dust2:de_overpass.1) %>%
extract(planted, c('planted', 'notplanted'), '\\.')
?separate
df <- data.frame(x = c("a", "b"), y = c(3, 4), z = c(5, 6))
df
df %>% spread(x, y)
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, de_dust2:de_overpass.1) %>%
spread(map, planted)
raw2 %>%
select(-starts_with("X"))
help(unite)
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, contains(".1"))
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, contains(".1")) %>%
View()
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, contains(".1")) %>%
gather(map, planted, de_dust:de_overpass) %>%
View()
raw2 %>%
select(-starts_with("X")) %>%
gather(map, planted, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass) %>%
View()
raw2 %>%
select(-starts_with("X")) %>%
gather(map1, planted1, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass) %>%
View()
raw2 %>%
select(-starts_with("X")) %>%
gather(map1, planted1, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round.Group),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
View()
raw2 %>%
select(-starts_with("X")) %>%
gather(map1, planted1, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..Group),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
View()
raw2 %>%
select(-starts_with("X")) %>%
gather(map1, planted1, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..Group.),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
View()
bdat <- raw2 %>%
select(-starts_with("X")) %>%
gather(map1, planted1, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass)
head(bdat)
raw2 %>%
select(-starts_with("X")) %>%
gather(map1, planted1, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..group.),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
View()
?slice
raw2 %>%
select(-starts_with("X")) %>%
filter(row_number() != 1) %>%   # Remove extra header
gather(map1, notplanted, contains(".1")) %>%
gather(map, planted, de_dust2:de_overpass) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..group.),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
View()
raw2 %>%
select(-starts_with("X"))
raw2 %>%
select(-starts_with("X")) %>% head()
raw2 %>%
select(-starts_with("X"), -contains(".1")) %>% head()
planted <- raw2 %>%
select(-starts_with("X"), -contains(".1")) %>%
filter(row_number() != 1) %>%   # Remove extra header
gather(map, planted, de_dust2:de_overpass)
head(planted)
notplanted <- raw2 %>%
select(-starts_with("X"), contains(".1"))
head(notplanted)
?select
notplanted <- raw2 %>%
select(-starts_with("X"), ends_with(".1"))
head(notplanted)
raw2 %>%
select(ends_with(".1"), -starts_with("X")) %>% head()
head(raw2)
raw2 %>%
select(1:4, ends_with(".1"), -starts_with("X")) %>% head()
notplanted <- raw2 %>%
select(1:4, ends_with(".1"), -starts_with("X")) %>%
filter(row_number() != 1) %>%   # Remove extra header
gather(map, planted, de_dust2.1:de_overpass.1)
head(notplanted)
notplanted <- raw2 %>%
select(1:4, ends_with(".1"), -starts_with("X")) %>%
filter(row_number() != 1) %>%   # Remove extra header
gather(map, planted, de_dust2.1:de_overpass.1) %>%
mutate(map = gsub(".1", "", map))
head(notplanted)
notplanted <- raw2 %>%
select(1:4, ends_with(".1"), -starts_with("X")) %>%
filter(row_number() != 1) %>%   # Remove extra header
gather(map, notplanted, de_dust2.1:de_overpass.1) %>%
mutate(map = gsub(".1", "", map))
head(notplanted)
bdat <- planted %>%
left_join(notplanted)
head(bdat)
bdat <- planted %>%
left_join(notplanted) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..group.),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
View()
head(bdat)
bdat <- planted %>%
left_join(notplanted) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..group.),
round.group = factor(round.group, c("1", "2-3", "4-15"))
)
head(bdat)
bdat <- planted %>%
left_join(notplanted) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..group.),
round.group = factor(round.group, c("1", "2-3", "4-15"))
) %>%
select(skill.group, round.group, winner = Round.Winner,
endreason = RoundEndReason, map, planted, notplanted)
head(bdat)
bdat <- planted %>%
left_join(notplanted) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..group.),
round.group = factor(round.group, c("1", "2-3", "4-15")),
planted = as.numeric(sub("%", "", planted)) / 100,
notplanted = as.numeric(sub("%", "", notplanted)) / 100
) %>%
select(skill.group, round.group, winner = Round.Winner,
endreason = RoundEndReason, map, planted, notplanted)
head(bdat)
ggplot(filter(bdat, map %in% moi), aes(round.group, planted, color = skill.group))+
geom_line()+
geom_point()
facet_wrap(~map)
moi <- c("de_dust2", "de_nuke", "de_inferno")
ggplot(filter(bdat, map %in% moi), aes(round.group, planted, color = skill.group))+
geom_line()+
geom_point()
facet_wrap(~map)
ggplot(filter(bdat, map %in% moi), aes(round.group, planted, color = skill.group, group = skill.group))+
geom_line()+
geom_point()
facet_wrap(~map)
ggplot(filter(bdat, map %in% moi), aes(round.group, planted, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_wrap(~map)
ggplot(filter(bdat, map == 'de_dust2'), aes(round.group, planted, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_wrap(~endreason)
ggplot(filter(bdat, map == 'de_dust2'), aes(round.group, planted, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_grid(winner ~ endreason)
View(bdat)
bdat <- planted %>%
left_join(notplanted) %>%
mutate(
skill.group = gsub("[a-zA-Z ]", "", Skill.Group.Bin),
skill.group = factor(skill.group, c("1-6", "7-10", "11-14", "15-18")),
round.group = gsub("[a-zA-Z ]", "", Round..group.),
round.group = factor(round.group, c("1", "2-3", "4-15")),
planted = as.numeric(sub("%", "", planted)) / 100,
notplanted = as.numeric(sub("%", "", notplanted)) / 100
) %>%
select(skill.group, round.group, winner = Round.Winner,
endreason = RoundEndReason, map, planted, notplanted) %>%
filter(!is.na(skill.group))
ggplot(filter(bdat, map == 'de_dust2'), aes(round.group, planted, color = skill.group, group = skill.group))+
geom_line()+
geom_point()+
facet_grid(winner ~ endreason)
